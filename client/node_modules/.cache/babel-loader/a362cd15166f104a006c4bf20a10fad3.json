{"ast":null,"code":"import * as actionTypes from '../constants/productConstants';\nimport axios from 'axios';\nexport const getProductsActions = () => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get('/api/products');\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCTS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProductDetailsActions = id => async dispatch => {\n  try {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/products/${id}`);\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.resonse.data.message : error.message\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Juan/Documents/GitHub/J-Comm/client/src/redux/actions/productActions.js"],"names":["actionTypes","axios","getProductsActions","dispatch","type","GET_PRODUCTS_REQUEST","data","get","GET_PRODUCTS_SUCCESS","payload","error","GET_PRODUCTS_FAIL","response","message","getProductDetailsActions","id","GET_PRODUCT_DETAILS_REQUEST","GET_PRODUCT_DETAILS_SUCCESS","GET_PRODUCT_DETAILS_FAIL","resonse"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,+BAA7B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,kBAAkB,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACK;AAApB,KAAD,CAAR;AAEA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,eAAV,CAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACQ,oBADX;AAEPC,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAID,GATD,CASE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACW,iBADX;AAEPF,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GAAgDH,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAApE,GAA8EH,KAAK,CAACG;AAFtF,KAAD,CAAR;AAID;AACF,CAhBM;AAkBP,OAAO,MAAMC,wBAAwB,GAAIC,EAAD,IAAS,MAAOZ,QAAP,IAAoB;AACnE,MAAI;AACFA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEJ,WAAW,CAACgB;AAApB,KAAD,CAAR;AAEA,UAAM;AAAEV,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAW,iBAAgBQ,EAAG,EAA9B,CAAvB;AAEAZ,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACiB,2BADX;AAEPR,MAAAA,OAAO,EAAEH;AAFF,KAAD,CAAR;AAKD,GAVD,CAUE,OAAOI,KAAP,EAAc;AACdP,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,WAAW,CAACkB,wBADX;AAEPT,MAAAA,OAAO,EAAEC,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeN,IAAf,CAAoBO,OAAtC,GAAgDH,KAAK,CAACS,OAAN,CAAcb,IAAd,CAAmBO,OAAnE,GAA6EH,KAAK,CAACG;AAFrF,KAAD,CAAR;AAID;AACF,CAjBM","sourcesContent":["import * as actionTypes from '../constants/productConstants';\r\nimport axios from 'axios';\r\n\r\nexport const getProductsActions = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCTS_REQUEST });\r\n\r\n    const { data } = await axios.get('/api/products');\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_SUCCESS,\r\n      payload: data\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCTS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\r\n    });\r\n  }\r\n};\r\n\r\nexport const getProductDetailsActions = (id) =>  async (dispatch) => {\r\n  try {\r\n    dispatch({ type: actionTypes.GET_PRODUCT_DETAILS_REQUEST });\r\n\r\n    const { data } = await axios.get(`/api/products/${id}`);\r\n\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_SUCCESS,\r\n      payload: data\r\n    });\r\n\r\n  } catch (error) {\r\n    dispatch({\r\n      type: actionTypes.GET_PRODUCT_DETAILS_FAIL,\r\n      payload: error.response && error.response.data.message ? error.resonse.data.message : error.message\r\n    });\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}